// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Personas.Data;

namespace Personas.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("Personas.Data.Apellidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Comun")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cultura")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsCompuesto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdIdioma")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdIdioma");

                    b.ToTable("Apellidos");
                });

            modelBuilder.Entity("Personas.Data.Idiomas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("Personas.Data.Localidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("Personas.Data.Nombres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Comun")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cultura")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsCompuesto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdIdioma")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("Sexo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdIdioma");

                    b.ToTable("Nombres");
                });

            modelBuilder.Entity("Personas.Data.Paises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Personas.Data.Provincias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GentilicioFemenino")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("GentilicioMasculino")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("IdRegion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdRegion");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("Personas.Data.Regiones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Densidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GentilicioFemenino")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("GentilicioMasculino")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int?>("IdIdiomaCooficial")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdIdiomaOficial")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPais")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("NumeroHabitantes")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PorcentajeIdiomaOficial")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdIdiomaCooficial");

                    b.HasIndex("IdIdiomaOficial");

                    b.HasIndex("IdPais");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("Personas.Data.Apellidos", b =>
                {
                    b.HasOne("Personas.Data.Idiomas", "Idioma")
                        .WithMany("Apellidos")
                        .HasForeignKey("IdIdioma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Personas.Data.Localidades", b =>
                {
                    b.HasOne("Personas.Data.Provincias", "Provincias")
                        .WithMany("Localidades")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Personas.Data.Nombres", b =>
                {
                    b.HasOne("Personas.Data.Idiomas", "Idioma")
                        .WithMany("Nombres")
                        .HasForeignKey("IdIdioma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Personas.Data.Provincias", b =>
                {
                    b.HasOne("Personas.Data.Regiones", "Regiones")
                        .WithMany("Provincias")
                        .HasForeignKey("IdRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Personas.Data.Regiones", b =>
                {
                    b.HasOne("Personas.Data.Idiomas", "IdiomaCooficial")
                        .WithMany("RegionesCooficial")
                        .HasForeignKey("IdIdiomaCooficial");

                    b.HasOne("Personas.Data.Idiomas", "IdiomaOficial")
                        .WithMany("RegionesOficial")
                        .HasForeignKey("IdIdiomaOficial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Personas.Data.Paises", "Pais")
                        .WithMany("Regiones")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
